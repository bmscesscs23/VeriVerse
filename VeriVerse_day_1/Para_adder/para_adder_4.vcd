$date
	Sun Dec 10 17:35:12 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_para_adder_4 $end
$var wire 4 ! sum [3:0] $end
$var wire 4 " cout [3:0] $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module dut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sum [3:0] $end
$var wire 4 ) cout [3:0] $end
$scope module i0 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 % cin $end
$var wire 1 , cout $end
$var wire 1 - sum $end
$var wire 1 . temp $end
$var wire 1 / ha_sum $end
$var wire 1 0 ha_carry $end
$scope module i1 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 0 carry $end
$var wire 1 / sum $end
$upscope $end
$upscope $end
$scope module i1 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 3 cin $end
$var wire 1 4 cout $end
$var wire 1 5 sum $end
$var wire 1 6 temp $end
$var wire 1 7 ha_sum $end
$var wire 1 8 ha_carry $end
$scope module i1 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 8 carry $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$scope module i2 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < cout $end
$var wire 1 = sum $end
$var wire 1 > temp $end
$var wire 1 ? ha_sum $end
$var wire 1 @ ha_carry $end
$scope module i1 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 @ carry $end
$var wire 1 ? sum $end
$upscope $end
$upscope $end
$scope module i3 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C cin $end
$var wire 1 D cout $end
$var wire 1 E sum $end
$var wire 1 F temp $end
$var wire 1 G ha_sum $end
$var wire 1 H ha_carry $end
$scope module i1 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 H carry $end
$var wire 1 G sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
b0 )
b0 (
b0 '
b0 &
0%
b0 $
b0 #
b0 "
b0 !
$end
#10000
b10 !
b10 (
15
13
b1 "
b1 )
1,
10
1+
1*
b1 $
b1 '
b1 #
b1 &
#20000
05
b100 !
b100 (
1=
03
1;
0,
b10 "
b10 )
14
00
18
0+
12
0*
11
b10 $
b10 '
b10 #
b10 &
#30000
0=
b1000 !
b1000 (
1E
0;
1C
04
b100 "
b100 )
1<
08
1@
02
1:
01
19
b100 $
b100 '
b100 #
b100 &
#40000
b1010 !
b1010 (
15
13
b101 "
b101 )
1,
10
1+
1*
b101 $
b101 '
b101 #
b101 &
#50000
05
b1100 !
b1100 (
1=
03
1;
0,
b110 "
b110 )
14
00
18
0+
12
0*
11
b110 $
b110 '
b110 #
b110 &
#60000
b1110 !
b1110 (
15
13
b111 "
b111 )
1,
10
1+
1*
b111 $
b111 '
b111 #
b111 &
#70000
05
0=
b0 !
b0 (
0E
03
0;
0C
0,
04
0<
b1000 "
b1000 )
1D
00
08
0@
1H
0+
02
0:
1B
0*
01
09
1A
b1000 $
b1000 '
b1000 #
b1000 &
#80000
b10 !
b10 (
15
13
b1001 "
b1001 )
1,
10
1+
1*
b1001 $
b1001 '
b1001 #
b1001 &
#90000
